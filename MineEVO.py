# ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë
# ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó
# ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù
# ‚ñë‚ïö‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñë‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó
# ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñë‚ïö‚ïê‚ñà‚ñà‚ïî‚ïê‚ïù‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë
# ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù
# ---------------------------------------------------------------------------------------------
# Name: MineEVO
# Description: –ü–æ–ª–µ–∑–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –±–æ—Ç–∞ @mine_evo_bot
# Author: sqlmerr
# Commands:
# .mprofile | .mcases | .mperevod | .mmine | .mautobonus | .mautopromo | .mautothx | .mautosell
# ---------------------------------------------------------------------------------------------

# –≤–µ—Ä—Å–∏—è –º–æ–¥—É–ª—è
__version__ = (1, 0, 2)
# meta developer: @sqlmerr_m
# meta banner: https://github.com/sqlmerr/hikka_mods/blob/main/mineevo.png
# only hikka

# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import asyncio

from telethon.tl.types import Message, ChatAdminRights
from telethon import events, functions, types

import logging

import re

from .. import loader, utils


logger = logging.getLogger(__name__)

# —Å–∞–º –∫–ª–∞—Å—Å –º–æ–¥—É–ª—è
@loader.tds
class MineEVO(loader.Module):
    """–ü–æ–ª–µ–∑–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –±–æ—Ç–∞ @mine_evo_bot"""
    # –Ω—É–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    strings = {
        "name": "MineEVO",
        "lvl": "–í–∞—à —É—Ä–æ–≤–µ–Ω—å",
        "mine_interval": "‚è≥ –ò–Ω—Ç–µ—Ä–≤–∞–ª –∫–æ–ø–∞–Ω–∏—è",
        "mine_status": "‚öôÔ∏è –ù—É —Ç–∏–ø –∫–æ–ø–∞–µ—Ç–µ –≤—ã –∏–ª–∏ –Ω–µ—Ç",
        "perevod_interval": "‚è≥ –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–µ—Ä–µ–≤–æ–¥–∞ –ª–∏–º–∏—Ç–æ–≤",
        "autobonus_status": "‚öôÔ∏è –ü–æ–ª—É—á–∞–µ—Ç–µ –ª–∏ –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –∏–ª–∏ –Ω–µ—Ç",
        "autopromo_status": "‚öôÔ∏è –ü–∏—à–∏—Ç–µ –ª–∏ –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–º–æ –∏–ª–∏ –Ω–µ—Ç",
        "autothx_status": "‚öôÔ∏è –ü–∏—à–∏—Ç–µ –ª–∏ –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ Thx –∏–ª–∏ –Ω–µ—Ç",
        "autosell_status": "‚öôÔ∏è –ü—Ä–æ–¥–∞–µ—Ç–µ –ª–∏ –≤—ã —Ä—É–¥—É –∏–ª–∏ –Ω–µ—Ç",
        "autoboost_status": "‚öôÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –ª–∏ –≤—ã –±—É—Å—Ç –¥–µ–Ω–µ–≥ 1.5 –≤–æ –≤—Ä–µ–º—è –∞–≤—Ç–æ-–ø—Ä–æ–¥–∞–∂–∏ –∏–ª–∏ –Ω–µ—Ç",
    }
    # –∫–æ–≥–¥–∞ –∫–ª–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ:
    async def client_ready(self):
        # —Å–æ–∑–¥–∞–µ—Ç—Å—è —á–∞—Ç
        self._mineevo_channel, _ = await utils.asset_channel(
            self._client,
            "MineEVO - —á–∞—Ç",
            "–ù–µ –ø–∏—à–∏—Ç–µ —Å—é–¥–∞. –≠—Ç–æ—Ç —á–∞—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ—Ç –¥–ª—è –º–æ–¥—É–ª—è MineEVO –æ—Ç @sqlmerr_m",
            silent=True,
            archive=True,
            _folder="hikka",
        )
        # –≤ —ç—Ç–æ—Ç —á–∞—Ç –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –±–æ—Ç @mine_evo_bot
        await self.client(functions.channels.InviteToChannelRequest(self._mineevo_channel, ['@mine_evo_bot']))
        # –∏ —ç—Ç–æ–º—É –±–æ—Ç—É –≤—ã–¥–∞—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞, –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
        await self.client(functions.channels.EditAdminRequest(
                channel=self._mineevo_channel,
                user_id="@mine_evo_bot",
                admin_rights=ChatAdminRights(ban_users=True, post_messages=True, edit_messages=True),
                rank="MineEVO",
            )
        )




    # —Ñ—É–Ω–∫—Ü–∏—è, —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å –û–û–ü –∏ –Ω—É–∂–Ω–∞—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–∞
    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "mine_interval",
                2.0,
                lambda: self.strings("mine_interval"),
                validator=loader.validators.Float()
            ),
            loader.ConfigValue(
                "mine_status",
                False,
                lambda: self.strings("mine_status"),
                validator=loader.validators.Boolean()
            ),
            loader.ConfigValue(
                "perevod_interval",
                2.0,
                lambda: self.strings("perevod_interval"),
                validator=loader.validators.Float()
            ),
            loader.ConfigValue(
                "autobonus_status",
                False,
                lambda: self.strings("autobonus_status"),
                validator=loader.validators.Boolean()
            ),
            loader.ConfigValue(
                "autopromo_status",
                True,
                lambda: self.strings("autopromo_status"),
                validator=loader.validators.Boolean()
            ),
            loader.ConfigValue(
                "autothx_status",
                False,
                lambda: self.strings("autothx_status"),
                validator=loader.validators.Boolean()
            ),
            loader.ConfigValue(
                "autosell_status",
                False,
                lambda: self.strings("autosell_status"),
                validator=loader.validators.Boolean()
            ),
            loader.ConfigValue(
                "autoboost_status",
                False,
                lambda: self.strings("autoboost_status"),
                validator=loader.validators.Boolean()
            ),
        )
    # .mprofile
    @loader.command()
    async def mprofile(self, message: Message):
        """–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —Ç–µ–∫—É—â–∏–π —á–∞—Ç –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –≤ –±–æ—Ç–µ @mine_evo_bot"""
        await utils.answer(message, '<emoji document_id=5451882707875276247>üïØ</emoji> –í—ã–ø–æ–ª–Ω—è—é...')
        # —é–± –Ω–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –≤ —á–∞—Ç–µ —Å –∞—Å—Å–µ—Ç–∞–º–∏ –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        async with self._client.conversation(self._mineevo_channel) as conv:
            await conv.send_message('–ø—Ä–æ—Ñ–∏–ª—å')
            # –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
            response = await conv.get_response()
        # –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –æ—Ç–≤–µ—Ç
        await response.forward_to(message.to_id)
        await message.delete()
    # .mcases
    @loader.command()
    async def mcases(self, message: Message):
        """–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —Ç–µ–∫—É—â–∏–π —á–∞—Ç –≤–∞—à–∏ –∫–µ–π—Å—ã –≤ –±–æ—Ç–µ @mine_evo_bot"""
        await utils.answer(message, '<emoji document_id=5451882707875276247>üïØ</emoji> –í—ã–ø–æ–ª–Ω—è—é...')
        # —é–± –Ω–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –≤ —á–∞—Ç–µ —Å –∞—Å—Å–µ—Ç–∞–º–∏ –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        async with self._client.conversation(self._mineevo_channel) as conv:
            await conv.send_message('–∫–µ–π—Å—ã')  # upload step
            response = await conv.get_response() # first message
            # –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
        # –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –æ—Ç–≤–µ—Ç
        await response.forward_to(message.to_id)
        await message.delete()
    # .mmine
    @loader.command()
    async def mmine(self, message: Message):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–ø–∞–µ—Ç –∑–∞ –≤–∞—Å"""
        self.config["mine_status"] = not self.config["mine_status"]
        status = (
            "–ö–æ–ø–∞—é <emoji document_id=5282855481121976759>‚õè</emoji>"
            if self.config["mine_status"]
            else "–ë–æ–ª—å—à–µ –Ω–µ –∫–æ–ø–∞—é <emoji document_id=5282855481121976759>‚õè</emoji>"
        )

        await utils.answer(message, "<emoji document_id=5314346928660554905>‚ö†Ô∏è</emoji> –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ-–º–∞–π–Ω–∞:\n <b>{}</b>".format(status))

        if self.config["mine_status"]:
            interval = self.config["mine_interval"]

            logger.debug("start mining...")
            # —é–± –∫–æ–ø–∞–µ—Ç –∑–∞ –≤–∞—Å
            while self.config["mine_status"]:
                if self.config["mine_status"]:
                    await self.client.send_message("@mine_evo_bot", "–∫–æ–ø")
                    await asyncio.sleep(interval)
                else:
                    return
                    break
        else:
            return

    # .mperevod <–∫–æ–ª-–≤–æ –ª–∏–º–∏—Ç–æ–≤> <–Ω–∏–∫ —á–µ–ª–∞ –≤ –±–æ—Ç–µ>
    @loader.command()
    async def mperevod(self, message: Message):
        """ <–∫–æ–ª-–≤–æ –ª–∏–º–∏—Ç–æ–≤> <–Ω–∏–∫ —á–µ–ª–∞ –≤ –±–æ—Ç–µ> - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –ª–∏–º–∏—Ç—ã –∑–∞ –≤–∞—Å"""
        autoperevod = False
        autoperevod = not autoperevod
        status = (
            "<emoji document_id=5309799327093236710>ü´•</emoji> –ù–∞—á–∏–Ω–∞—é –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –ª–∏–º–∏—Ç—ã"
            if autoperevod
            else "<emoji document_id=5307675706283533118>ü´•</emoji> –ê–≤—Ç–æ-–ø–µ—Ä–µ–≤–æ–¥ –≤—ã–∫–ª—é—á–µ–Ω"
        ) 

        await utils.answer(message, "<emoji document_id=5314346928660554905>‚ö†Ô∏è</emoji> –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ-–ø–µ—Ä–µ–≤–æ–¥–∞:\n <b>{}</b>".format(status))

        if autoperevod:
            interval = self.config["perevod_interval"]
            # –ø–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
            args = utils.get_args_raw(message).split()
            
            # –µ—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –Ω–µ—Ç
            if not args:
                await utils.answer(message, '–≤–≤–µ–¥–∏—Ç–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã: .mperevod <–∫–æ–ª-–≤–æ –ª–∏–º–∏—Ç–æ–≤> <–Ω–∏–∫ —á–µ–ª–∞ –≤ –±–æ—Ç–µ>')
                return
            limits = int(args[0])

            async with self._client.conversation(self._mineevo_channel) as conv:
                a = await conv.send_message(f"–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ {args[1]} –ª–∏–º–∏—Ç")

                b = await conv.get_response()
                list_msgs_id = [a.id, b.id]

            if "–ø–µ—Ä–µ–≤–µ–ª(–∞) –∏–≥—Ä–æ–∫—É" in b.text:
                await self.client.delete_messages(entity=self._mineevo_channel, message_ids=list_msgs_id)
            else:
                await utils.answer(message, f"<emoji document_id=5447644880824181073>‚ö†Ô∏è</emoji> –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n\n{b.text}")
                return await self.client.delete_messages(entity=self._mineevo_channel, message_ids=list_msgs_id)

            logger.debug("starting to transfer limits...")
            # —é–± –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –ª–∏–º–∏—Ç—ã
            while limits > 0:
                if autoperevod:
                    limits -= 1
                    
                    await self.client.send_message("@mine_evo_bot", f"–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ {args[1]} –ª–∏–º–∏—Ç")
                    await asyncio.sleep(interval)
                else:
                    await self.client.send_message(self._mineevo_channel, "–í—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ –ª–∏–º–∏—Ç–æ–≤!")
                    return
                    break
            await self.client.send_message(self._mineevo_channel, f'<emoji document_id=5447644880824181073>‚ö†Ô∏è</emoji> –í—Å–µ –ª–∏–º–∏—Ç—ã –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã!\n\n<emoji document_id=5210956306952758910>üëÄ</emoji> –ö–æ–º—É: <code>{args[1]}</code>  |  <emoji document_id=5456140674028019486>‚ö°Ô∏è</emoji> –°–∫–æ–ª—å–∫–æ: <b>{args[0]}</b>')
        else:
            return

    # .mautobonus
    @loader.command()
    async def mautobonus(self, message: Message):
        """–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∏—Ä–∞–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å"""
        self.config["autobonus_status"] = not self.config["autobonus_status"]
        status = (
            "<emoji document_id=5416081784641168838>üü¢</emoji> –ê–≤—Ç–æ-–µ–± –≤–∫–ª—é—á–µ–Ω–æ"
            if self.config["autobonus_status"]
            else "<emoji document_id=5411225014148014586>üî¥</emoji> –ê–≤—Ç–æ-–µ–± –≤—ã–∫–ª—é—á–µ–Ω–æ"
        )

        await utils.answer(message, "<emoji document_id=5314346928660554905>‚ö†Ô∏è</emoji> –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ-–µ–±:\n <b>{}</b>".format(status))

        if self.config["autobonus_status"]:
            while self.config["autobonus_status"]:
                if self.config["autobonus_status"]:
                    await self.client.send_message(self._mineevo_channel, "–µ–±")
                    await asyncio.sleep(86400)
                else:
                    return
                    break
        else:
            return
    # .mautothx
    @loader.command()
    async def mautothx(self, message: Message):
        """–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–∏—à–µ—Ç thx"""
        self.config["autothx_status"] = not self.config["autothx_status"]
        status = (
            "–ê–≤—Ç–æ-thx –≤–∫–ª—é—á–µ–Ω–æ"
            if self.config["autothx_status"]
            else "–ê–≤—Ç–æ-thx –≤—ã–∫–ª—é—á–µ–Ω–æ"
        )

        await utils.answer(message, "<emoji document_id=5314346928660554905>‚ö†Ô∏è</emoji> –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ-thx:\n <b>{}</b>".format(status))

    # .mautopromo
    @loader.command()
    async def mautopromo(self, message: Message):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ-–ø—Ä–æ–º–æ"""
        self.config["autopromo_status"] = not self.config["autopromo_status"]
        status = (
            "<emoji document_id=5424972470023104089>üî•</emoji> –ê–≤—Ç–æ-–ø—Ä–æ–º–æ –≤–∫–ª—é—á–µ–Ω–æ"
            if self.config["autopromo_status"]
            else "<emoji document_id=5424972470023104089>üî•</emoji> –ê–≤—Ç–æ-–ø—Ä–æ–º–æ –≤—ã–∫–ª—é—á–µ–Ω–æ"
        )

        await utils.answer(message, "<emoji document_id=5314346928660554905>‚ö†Ô∏è</emoji> –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ-–ø—Ä–æ–º–æ:\n <b>{}</b>".format(status))


    # auto-promo (idea: https://t.me/Demchik347), autothx
    @loader.watcher(only_messages=True)
    async def watcher(self, message: Message):
        if self.config["autopromo_status"] and message.chat_id == -1001892345917:
            promo_start = message.text.index("–ü—Ä–æ–º–æ ") + len("–ü—Ä–æ–º–æ ") # –Ω–∞—Ö–æ–¥–∏–º –Ω–∞—á–∞–ª–æ–ø—Ä–æ–º–æ–∫–æ–¥–∞
            promo_end = message.text.index("\n", promo_start) # –Ω–∞—Ö–æ–¥–∏–º –∫–æ–Ω–µ—Ü –ø—Ä–æ–º–æ–∫–æ–¥–∞
            promo_code = message.text[promo_start:promo_end] # –∏–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–¥ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
            await self.client.send_message(self._mineevo_channel, f'–ü—Ä–æ–º–æ {promo_code}')

            logger.debug("–±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø—Ä–æ–º–æ")
        elif message.chat_id == 5522271758 and "(–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É Thx —á—Ç–æ–±—ã –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å –∏ –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å)" in message.raw_text:
            if self.config["autothx_status"]:
                self.client.send_message(self._mineevo_channel, "thx")




    # .mautosell
    @loader.command()
    async def mautosell(self, message: Message):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ-–ø—Ä–æ–¥–∞–∂—É"""
        self.config["autosell_status"] = not self.config["autosell_status"]
        status = (
            "<emoji document_id=5409048419211682843>üí≤</emoji> –ê–≤—Ç–æ-–ø—Ä–æ–¥–∞–∂–∞ –≤–∫–ª—é—á–µ–Ω–∞"
            if self.config["autosell_status"]
            else "<emoji document_id=5409048419211682843>üí≤</emoji> –ê–≤—Ç–æ-–ø—Ä–æ–¥–∞–∂–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞"
        )

        await utils.answer(message, "<emoji document_id=5314346928660554905>‚ö†Ô∏è</emoji> –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ-–ø—Ä–æ–¥–∞–∂–∏:\n <b>{}</b>".format(status))
        self.config["autosell_status"]
        if self.config["autosell_status"]:
            while self.config["autosell_status"]:
                if self.config["autosell_status"]:
                    async with self._client.conversation(self._mineevo_channel) as conv:
                        if self.config["autoboost_status"]:
                            o = await conv.send_message("–±—É—Å—Ç –¥ 1.5")
                            oo = await conv.get_response()
                        a = await conv.send_message('–∏–Ω–≤')
                        # –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
                        b = await conv.get_response()
                        list_msgs_id = [a.id, b.id]
                    await b.click(0)
                    await asyncio.sleep(605)
                    await self.client.delete_messages(entity=self._mineevo_channel, message_ids=list_msgs_id)
                else:
                    return
                    break
        else:
            return

