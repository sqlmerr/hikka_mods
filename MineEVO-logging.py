# ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë
# ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó
# ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù
# ‚ñë‚ïö‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñë‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó
# ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñë‚ïö‚ïê‚ñà‚ñà‚ïî‚ïê‚ïù‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë
# ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù
# ---------------------------------------------------------------------------------------------
# Name: MineEVO-logs
# Description: –ü–æ–ª–µ–∑–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±–æ—Ç–µ @mine_evo_bot | –î–ª—è —Ä–∞–±–æ—Ç—ã –ø–æ—Å—Ç–∞–≤—å—Ç–µ –≤ –∫–æ–Ω—Ñ–∏–≥–µ –≤–∞—à –Ω–∏–∫
# Author: sqlmerr
# Commands:
# .mlogging
# ---------------------------------------------------------------------------------------------

# –≤–µ—Ä—Å–∏—è –º–æ–¥—É–ª—è
__version__ = (1, 0, 0)
# meta developer: @sqlmerr_m
# only hikka

# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏

from telethon.tl.types import Message, ChatAdminRights
from telethon import functions

import logging


from .. import loader, utils


logger = logging.getLogger(__name__)


# —Å–∞–º –∫–ª–∞—Å—Å –º–æ–¥—É–ª—è
@loader.tds
class MineEVO_logs(loader.Module):
    """–ü–æ–ª–µ–∑–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±–æ—Ç–µ @mine_evo_bot | –î–ª—è —Ä–∞–±–æ—Ç—ã –ø–æ—Å—Ç–∞–≤—å—Ç–µ –≤ –∫–æ–Ω—Ñ–∏–≥–µ –≤–∞—à –Ω–∏–∫ | –ò –∑–∞–≥–ª—è–Ω–∏—Ç–µ –≤ –∫–æ–Ω—Ñ–∏–≥"""

    # –Ω—É–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    strings = {
        "name": "MineEVO-logging",
        "status": "–í–∫–ª—é—á–µ–Ω –ª–∏ –º–æ–¥—É–ª—å –∏–ª–∏ –Ω–µ—Ç",
        "nickname": "–í–∞—à –Ω–∏–∫ –≤ –±–æ—Ç–µ (–≤–∞–∂–Ω–æ)",
        "logging": "–¢–æ, —á—Ç–æ –±—É–¥–µ—Ç –ª–æ–≥–≥–∏—Ä–æ–≤–∞—Ç—å—Å—è",
    }

    async def client_ready(self):
        # —Å–æ–∑–¥–∞–µ—Ç—Å—è —á–∞—Ç
        self._mineevologs_channel, _ = await utils.asset_channel(
            self._client,
            "MineEVO-logs - —á–∞—Ç",
            "–ù–µ –ø–∏—à–∏—Ç–µ —Å—é–¥–∞. –≠—Ç–æ—Ç —á–∞—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ—Ç –¥–ª—è –º–æ–¥—É–ª—è MineEVO-logs –æ—Ç @sqlmerr_m",
            silent=True,
            archive=True,
            _folder="hikka",
        )
        # –≤ —ç—Ç–æ—Ç —á–∞—Ç –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –±–æ—Ç @mine_evo_bot
        await self.client(
            functions.channels.InviteToChannelRequest(
                self._mineevologs_channel, ["@mine_evo_bot"]
            )
        )
        # –∏ —ç—Ç–æ–º—É –±–æ—Ç—É –≤—ã–¥–∞—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞, –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
        await self.client(
            functions.channels.EditAdminRequest(
                channel=self._mineevologs_channel,
                user_id="@mine_evo_bot",
                admin_rights=ChatAdminRights(
                    ban_users=True, post_messages=True, edit_messages=True
                ),
                rank="MineEVO-logs",
            )
        )

    # —Ñ—É–Ω–∫—Ü–∏—è, —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å –û–û–ü –∏ –Ω—É–∂–Ω–∞—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–∞
    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "status",
                False,
                lambda: self.strings("status"),
                validator=loader.validators.Boolean(),
            ),
            loader.ConfigValue(
                "logging",
                ["–≤—ã–∫–æ–ø–∞–Ω–Ω—ã–µ_–∫–µ–π—Å—ã", "–ø–µ—Ä–µ–¥–∞—á–∏_–∫–µ–π—Å–æ–≤_—Ç–µ–±–µ", "–ø–µ—Ä–µ–¥–∞—á–∏_–∫–µ–π—Å–æ–≤_–æ—Ç_—Ç–µ–±—è"],
                lambda: self.strings("logging"),
                validator=loader.validators.MultiChoice(
                    [
                        "–≤—ã–∫–æ–ø–∞–Ω–Ω—ã–µ_–∫–µ–π—Å—ã",
                        "–ø–µ—Ä–µ–≤–æ–¥—ã_—Ç–µ–±–µ",
                        "–ø–µ—Ä–µ–≤–æ–¥—ã_–æ—Ç_—Ç–µ–±—è",
                        "–ø–µ—Ä–µ–¥–∞—á–∏_–∫–µ–π—Å–æ–≤_—Ç–µ–±–µ",
                        "–ø–µ—Ä–µ–¥–∞—á–∏_–∫–µ–π—Å–æ–≤_–æ—Ç_—Ç–µ–±—è",
                    ]
                ),
            ),
        )

    # .mlogging
    @loader.command()
    async def mlogging(self, message: Message):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ"""
        self.config["status"] = not self.config["status"]
        status = (
            "–õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ <emoji document_id=5409048419211682843>üí≤</emoji>"
            if self.config["status"]
            else "–õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω–æ <emoji document_id=5409048419211682843>üí≤</emoji>"
        )

        await utils.answer(
            message,
            "<emoji document_id=5314346928660554905>‚ö†Ô∏è</emoji> <b>{}</b>".format(status),
        )

    @loader.watcher(only_messages=True, chat_id=5522271758)
    async def watcher(self, message: Message):
        if self.config["status"]:
            mined_cases = False
            perevod_me = False
            perevod_to = False
            peredacha_me = False
            peredacha_to = False
            for o in self.config["logging"]:
                if o == "–≤—ã–∫–æ–ø–∞–Ω–Ω—ã–µ_–∫–µ–π—Å—ã":
                    mined_cases = True
                elif o == "–ø–µ—Ä–µ–≤–æ–¥—ã_—Ç–µ–±–µ":
                    perevod_me = True
                elif o == "–ø–µ—Ä–µ–≤–æ–¥—ã_–æ—Ç_—Ç–µ–±—è":
                    perevod_to = True
                elif o == "–ø–µ—Ä–µ–¥–∞—á–∏_–∫–µ–π—Å–æ–≤_—Ç–µ–±–µ":
                    peredacha_me = True
                elif o == "–ø–µ—Ä–µ–¥–∞—á–∏_–∫–µ–π—Å–æ–≤_–æ—Ç_—Ç–µ–±—è":
                    peredacha_to = True

            if mined_cases:
                if (
                    "‚úâÔ∏è –¢—ã –Ω–∞—à–µ–ª(–ª–∞) –∫–æ–Ω–≤–µ—Ä—Ç." in message.raw_text
                    or "üßß –¢—ã –Ω–∞—à–µ–ª(–ª–∞) —Ä–µ–¥–∫–∏–π –∫–æ–Ω–≤–µ—Ä—Ç." in message.raw_text
                    or "üì¶ –¢—ã –Ω–∞—à–µ–ª(–ª–∞) –ö–µ–π—Å!" in message.raw_text
                    or "üó≥ –¢—ã –Ω–∞—à–µ–ª(–ª–∞) –†–µ–¥–∫–∏–π –ö–µ–π—Å!" in message.raw_text
                    or "üïã –¢—ã –Ω–∞—à–µ–ª(–ª–∞) –ú–∏—Ñ–∏—á–µ—Å–∫–∏–π –ö–µ–π—Å!" in message.raw_text
                    or "üíé –¢—ã –Ω–∞—à–µ–ª(–ª–∞) –ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π –ö–µ–π—Å!" in message.raw_text
                    or "üí´" in message.raw_text
                ):
                    await message.forward_to(self._mineevologs_channel)
                    # await self.client.send_message(self._mineevologs_channel, message.text)
            if perevod_me:
                if "–ø–µ—Ä–µ–≤–µ–ª(–∞) —Ç–µ–±–µ" in message.raw_text:
                    await message.forward_to(self._mineevologs_channel)
            if perevod_to:
                if "–ø–µ—Ä–µ–≤–µ–ª(–∞) –∏–≥—Ä–æ–∫—É" in message.raw_text:
                    await message.forward_to(self._mineevologs_channel)
            if peredacha_me:
                if "–ø–µ—Ä–µ–¥–∞–ª(–∞) —Ç–µ–±–µ" in message.raw_text:
                    await message.forward_to(self._mineevologs_channel)
            if peredacha_to:
                if "–ø–µ—Ä–µ–¥–∞–ª(–∞) –∏–≥—Ä–æ–∫—É" in message.raw_text:
                    await message.forward_to(self._mineevologs_channel)
